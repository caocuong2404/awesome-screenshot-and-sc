class CropStream2{inputStream;outputStream;imageCapture;canvas;ctx;canvasStream;timeoutId;crop;constructor(t,a){this.inputStream=t,this.crop=a,this.stop=this.stop.bind(this)}async absCrop(t){if(!this.inputStream)return t;if(!(t.x<1&&t.y<1&&t.w<1&&t.h<1))return t;const a=await this.imageCapture.grabFrame(),{width:e,height:i}=a;return{x:t.x*e,y:t.y*i,w:t.w*e,h:t.h*i}}async prepare(){if(this.inputStream){this.imageCapture=new ImageCapture(this.inputStream.getVideoTracks()[0]),this.canvas=document.createElement("canvas");const t=await this.absCrop(this.crop);this.canvas.width=t.w,this.canvas.height=t.h,this.ctx=this.canvas.getContext("2d"),this.canvasStream=this.canvas.captureStream();const a=this.inputStream.getAudioTracks(),e=this.canvasStream.getVideoTracks();return this.outputStream=new MediaStream([...e,...a]),void this.outputStream.getVideoTracks().forEach((t=>t.addEventListener("ended",this.stop)))}}async render(){const t=this.ctx,a=this.imageCapture,e=await this.absCrop(this.crop),i=-e.x,s=-e.y;const r=()=>{a.grabFrame().then((a=>{t.drawImage(a,i,s),this.timeoutId=window.setTimeout(r,34)}))};clearTimeout(this.timeoutId),r()}stop(){clearTimeout(this.timeoutId),this.outputStream?.getTracks().forEach((t=>t.stop())),this.outputStream=null,this.canvas=null,this.imageCapture=null,this.inputStream?.getTracks().forEach((t=>t.stop())),this.inputStream=null,this.ctx=null}async cropStream(t){await this.prepare(),this.render(),t()}get output(){return this.outputStream}}